{"ast":null,"code":"const validation = _ref => {\n  let {\n    form,\n    setError,\n    errors\n  } = _ref;\n  const newErrors = {\n    ...errors\n  };\n  const EMAIL = 'alanluna@gmail.com';\n  const PASSWORD = 'alan05';\n  if (!form.email) {\n    newErrors.email = 'Es necesario un email';\n  } else if (/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{4}$/g.test(form.email)) {\n    newErrors.email = 'Se requiere un email válido';\n  } else if (form.email !== EMAIL) {\n    newErrors.email = 'El email es incorrecto';\n  } else {\n    newErrors.email = \"\";\n  }\n  if (!form.password) {\n    newErrors.password = 'Es necesario ingresar una contraseña';\n  } else if (!/\\d/.test(form.password)) {\n    newErrors.password = 'La contraseña debe contener al menos un número';\n  } else if (form.password.length < 6 || form.password.length > 8) {\n    newErrors.password = 'La contraseña debe tener entre 6 y 8 caracteres';\n  } else if (form.password !== PASSWORD) {\n    newErrors.password = 'La contraseña es incorrecta';\n  } else {\n    newErrors.password = '';\n  }\n  return setError(newErrors);\n};\nexport default validation;","map":{"version":3,"names":["validation","_ref","form","setError","errors","newErrors","EMAIL","PASSWORD","email","test","password","length"],"sources":["/Users/alanluna/Desktop/SoyHenry/rickandmorty-m2/src/components/Form/validation.js"],"sourcesContent":["const validation = ({form, setError, errors}) => {\n\n    const newErrors = {...errors}\n    const EMAIL = 'alanluna@gmail.com';\n    const PASSWORD = 'alan05';\n    \n    if (!form.email) {\n        newErrors.email = 'Es necesario un email'\n    } else if (/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{4}$/g.test(form.email)) {\n        newErrors.email = 'Se requiere un email válido';\n    } else if (form.email !== EMAIL) {\n        newErrors.email = 'El email es incorrecto';\n    } else {\n        newErrors.email = \"\"\n    }\n    if (!form.password) {\n        newErrors.password = 'Es necesario ingresar una contraseña';\n    } else if (!/\\d/.test(form.password)) {\n        newErrors.password = 'La contraseña debe contener al menos un número';\n    } else if (form.password.length < 6 || form.password.length > 8) {\n        newErrors.password = 'La contraseña debe tener entre 6 y 8 caracteres';\n    } else if (form.password !== PASSWORD) {\n        newErrors.password = 'La contraseña es incorrecta';\n    } else {\n        newErrors.password = ''\n    }\n    \n    return setError(newErrors)\n}\n\n\nexport default validation;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,IAAA,IAA8B;EAAA,IAA7B;IAACC,IAAI;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAExC,MAAMI,SAAS,GAAG;IAAC,GAAGD;EAAM,CAAC;EAC7B,MAAME,KAAK,GAAG,oBAAoB;EAClC,MAAMC,QAAQ,GAAG,QAAQ;EAEzB,IAAI,CAACL,IAAI,CAACM,KAAK,EAAE;IACbH,SAAS,CAACG,KAAK,GAAG,uBAAuB;EAC7C,CAAC,MAAM,IAAI,gCAAgC,CAACC,IAAI,CAACP,IAAI,CAACM,KAAK,CAAC,EAAE;IAC1DH,SAAS,CAACG,KAAK,GAAG,6BAA6B;EACnD,CAAC,MAAM,IAAIN,IAAI,CAACM,KAAK,KAAKF,KAAK,EAAE;IAC7BD,SAAS,CAACG,KAAK,GAAG,wBAAwB;EAC9C,CAAC,MAAM;IACHH,SAAS,CAACG,KAAK,GAAG,EAAE;EACxB;EACA,IAAI,CAACN,IAAI,CAACQ,QAAQ,EAAE;IAChBL,SAAS,CAACK,QAAQ,GAAG,sCAAsC;EAC/D,CAAC,MAAM,IAAI,CAAC,IAAI,CAACD,IAAI,CAACP,IAAI,CAACQ,QAAQ,CAAC,EAAE;IAClCL,SAAS,CAACK,QAAQ,GAAG,gDAAgD;EACzE,CAAC,MAAM,IAAIR,IAAI,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIT,IAAI,CAACQ,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IAC7DN,SAAS,CAACK,QAAQ,GAAG,iDAAiD;EAC1E,CAAC,MAAM,IAAIR,IAAI,CAACQ,QAAQ,KAAKH,QAAQ,EAAE;IACnCF,SAAS,CAACK,QAAQ,GAAG,6BAA6B;EACtD,CAAC,MAAM;IACHL,SAAS,CAACK,QAAQ,GAAG,EAAE;EAC3B;EAEA,OAAOP,QAAQ,CAACE,SAAS,CAAC;AAC9B,CAAC;AAGD,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}