{"ast":null,"code":"const validation = values => {\n  let errors = {};\n  const EMAIL = 'alanluna@gmail.com';\n  const PASSWORD = 'alan05';\n  if (!values.email) {\n    errors.email = 'Email is required';\n  } else if (/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{4}$/g.test(values.email)) {\n    errors.email = 'Email is invalid';\n  } else if (values.email !== EMAIL) {\n    errors.email = 'Email is incorrect';\n  }\n  if (!values.password) {\n    errors.password = 'Password is required';\n  } else if (!/\\d/.test(values.password)) {\n    errors.password = 'Password must contain a number';\n  } else if (values.password.length < 6 || values.password.length > 8) {\n    errors.password = 'Password must be between 6 and 8 characters';\n  } else if (values.password !== PASSWORD) {\n    errors.password = 'Password is incorrect';\n  }\n  return {\n    email: errors.email,\n    password: errors.password\n  };\n};\nexport default validation;","map":{"version":3,"names":["validation","values","errors","EMAIL","PASSWORD","email","test","password","length"],"sources":["/Users/alanluna/Desktop/SoyHenry/rickandmorty-m2/src/components/Form/validation.js"],"sourcesContent":["const validation = (values) => {\n    let errors = {};\n    const EMAIL = 'alanluna@gmail.com';\n    const PASSWORD = 'alan05';\n    \n    if (!values.email) {\n        errors.email = 'Email is required';\n    } else if (/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{4}$/g.test(values.email)) {\n        errors.email = 'Email is invalid';\n    } else if (values.email !== EMAIL) {\n        errors.email = 'Email is incorrect';\n    }\n    if (!values.password) {\n        errors.password = 'Password is required';\n    } else if (!/\\d/.test(values.password)) {\n        errors.password = 'Password must contain a number';\n    } else if (values.password.length < 6 || values.password.length > 8) {\n        errors.password = 'Password must be between 6 and 8 characters';\n    } else if (values.password !== PASSWORD) {\n        errors.password = 'Password is incorrect';\n    }\n    \n    return { email : errors.email, password : errors.password};\n}\n\n\nexport default validation;\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,MAAM,IAAK;EAC3B,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,MAAMC,KAAK,GAAG,oBAAoB;EAClC,MAAMC,QAAQ,GAAG,QAAQ;EAEzB,IAAI,CAACH,MAAM,CAACI,KAAK,EAAE;IACfH,MAAM,CAACG,KAAK,GAAG,mBAAmB;EACtC,CAAC,MAAM,IAAI,gCAAgC,CAACC,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAE;IAC5DH,MAAM,CAACG,KAAK,GAAG,kBAAkB;EACrC,CAAC,MAAM,IAAIJ,MAAM,CAACI,KAAK,KAAKF,KAAK,EAAE;IAC/BD,MAAM,CAACG,KAAK,GAAG,oBAAoB;EACvC;EACA,IAAI,CAACJ,MAAM,CAACM,QAAQ,EAAE;IAClBL,MAAM,CAACK,QAAQ,GAAG,sBAAsB;EAC5C,CAAC,MAAM,IAAI,CAAC,IAAI,CAACD,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,EAAE;IACpCL,MAAM,CAACK,QAAQ,GAAG,gCAAgC;EACtD,CAAC,MAAM,IAAIN,MAAM,CAACM,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIP,MAAM,CAACM,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACjEN,MAAM,CAACK,QAAQ,GAAG,6CAA6C;EACnE,CAAC,MAAM,IAAIN,MAAM,CAACM,QAAQ,KAAKH,QAAQ,EAAE;IACrCF,MAAM,CAACK,QAAQ,GAAG,uBAAuB;EAC7C;EAEA,OAAO;IAAEF,KAAK,EAAGH,MAAM,CAACG,KAAK;IAAEE,QAAQ,EAAGL,MAAM,CAACK;EAAQ,CAAC;AAC9D,CAAC;AAGD,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}