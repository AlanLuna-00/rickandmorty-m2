{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER_CARDS, ORDER_CARDS } from \"./actions\";\nconst initialState = {\n  allCharacters: [],\n  myFavorites: [],\n  filteredCharacters: null\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        allCharacters: [...state.allCharacters],\n        myFavorites: [...state.myFavorites, action.payload],\n        filteredCharacters: state.filteredCharacters\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites.filter(char => char.id !== action.payload)]\n      };\n    case FILTER_CARDS:\n      return {\n        ...state,\n        filteredCharacters: [...state.allCharacters.filter(char => char.gender === action.payload)],\n        myFavorites: state.filteredCharacters ? [...state.filteredCharacters.filter(char => state.myFavorites.find(favChar => favChar.id === char.id))] : state.myFavorites // Si hay personajes filtrados, copiamos los que están en myFavorites\n      };\n\n    case ORDER_CARDS:\n      let sortedFavorites = [...state.myFavorites];\n      sortedFavorites.sort((a, b) => {\n        if (action.payload === 'A') {\n          return a.id - b.id;\n        } else if (action.payload === 'D') {\n          return b.id - a.id;\n        }\n        return null;\n      });\n      return {\n        ...state,\n        myFavorites: sortedFavorites\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER_CARDS","ORDER_CARDS","initialState","allCharacters","myFavorites","filteredCharacters","rootReducer","state","arguments","length","undefined","action","type","payload","filter","char","id","gender","find","favChar","sortedFavorites","sort","a","b"],"sources":["/Users/alanluna/Desktop/SoyHenry/rickandmorty-m2/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER_CARDS, ORDER_CARDS } from \"./actions\";\n\nconst initialState = {\n  allCharacters: [],\n  myFavorites: [],\n  filteredCharacters: null\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        allCharacters: [...state.allCharacters],\n        myFavorites: [...state.myFavorites, action.payload],\n        filteredCharacters: state.filteredCharacters\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: [\n          ...state.myFavorites.filter((char) => char.id !== action.payload),\n        ],\n      };\n    case FILTER_CARDS:\n      return {\n        ...state,\n        filteredCharacters: [...state.allCharacters.filter(\n            (char) => char.gender === action.payload\n        )],\n        myFavorites: state.filteredCharacters ? [...state.filteredCharacters.filter(\n            (char) => state.myFavorites.find((favChar) => favChar.id === char.id)\n        )] : state.myFavorites // Si hay personajes filtrados, copiamos los que están en myFavorites\n    }\n    case ORDER_CARDS:\n        let sortedFavorites = [...state.myFavorites];\n        sortedFavorites.sort((a, b) => {\n            if (action.payload === 'A') {\n                return a.id - b.id; \n            } else if (action.payload === 'D') {\n                return b.id - a.id; \n            }\n            return null\n        });\n        return {\n            ...state,\n            myFavorites: sortedFavorites\n        }\n    default:\n      return { ...state };\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,YAAY,EAAEC,WAAW,QAAQ,WAAW;AAE1E,MAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,EAAE;EACjBC,WAAW,EAAE,EAAE;EACfC,kBAAkB,EAAE;AACtB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKd,OAAO;MACV,OAAO;QACL,GAAGS,KAAK;QACRJ,aAAa,EAAE,CAAC,GAAGI,KAAK,CAACJ,aAAa,CAAC;QACvCC,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACH,WAAW,EAAEO,MAAM,CAACE,OAAO,CAAC;QACnDR,kBAAkB,EAAEE,KAAK,CAACF;MAC5B,CAAC;IACH,KAAKN,UAAU;MACb,OAAO;QACL,GAAGQ,KAAK;QACRH,WAAW,EAAE,CACX,GAAGG,KAAK,CAACH,WAAW,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;MAErE,CAAC;IACH,KAAKb,YAAY;MACf,OAAO;QACL,GAAGO,KAAK;QACRF,kBAAkB,EAAE,CAAC,GAAGE,KAAK,CAACJ,aAAa,CAACW,MAAM,CAC7CC,IAAI,IAAKA,IAAI,CAACE,MAAM,KAAKN,MAAM,CAACE,OAAO,CAC3C,CAAC;QACFT,WAAW,EAAEG,KAAK,CAACF,kBAAkB,GAAG,CAAC,GAAGE,KAAK,CAACF,kBAAkB,CAACS,MAAM,CACtEC,IAAI,IAAKR,KAAK,CAACH,WAAW,CAACc,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACH,EAAE,KAAKD,IAAI,CAACC,EAAE,CAAC,CACxE,CAAC,GAAGT,KAAK,CAACH,WAAW,CAAC;MAC3B,CAAC;;IACD,KAAKH,WAAW;MACZ,IAAImB,eAAe,GAAG,CAAC,GAAGb,KAAK,CAACH,WAAW,CAAC;MAC5CgB,eAAe,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3B,IAAIZ,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;UACxB,OAAOS,CAAC,CAACN,EAAE,GAAGO,CAAC,CAACP,EAAE;QACtB,CAAC,MAAM,IAAIL,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;UAC/B,OAAOU,CAAC,CAACP,EAAE,GAAGM,CAAC,CAACN,EAAE;QACtB;QACA,OAAO,IAAI;MACf,CAAC,CAAC;MACF,OAAO;QACH,GAAGT,KAAK;QACRH,WAAW,EAAEgB;MACjB,CAAC;IACL;MACE,OAAO;QAAE,GAAGb;MAAM,CAAC;EAAC;AAE1B,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}